apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.easymin.daijia.driver.zyziyunsjdaijia"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 9203
        versionName "V6.1.4.00"
        multiDexEnabled true
        flavorDimensions "App" //同在App这个名字维度
        ndk {
            //只兼容下面的型号
            abiFilters "armeabi-v7a"
        }

        manifestPlaceholders = [
                //打包证书的md5值，该值在配置阶段会清除空格和‘:’,并反转
                XK_MD5: "B0:3A:DF:FE:43:9D:F5:82:22:BA:40:E2:06:A6:54:AF",
        ]
    }

    signingConfigs {
        debug {
            keyAlias '资运司机端'
            keyPassword 'easymin'
            storeFile file('emdriver.keystore')
            storePassword 'easymin'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            keyAlias '资运司机端'
            keyPassword 'easymin'
            storeFile file('emdriver.keystore')
            storePassword 'easymin'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //V6（系统）.prepare（环境）.20190330（日期）.driver（端）.01（序号）
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "V6.${variant.productFlavors[0].name}.${releaseDate()}.driver.${releaseTime()}.apk"
        }
    }

    productFlavors {
        //预发环境
        prepare {
            dimension "App"//同在App这个名字维度
            buildConfigField "String", "HOST", '"http://api.xiaokakj.cn/"'
            buildConfigField "String", "H5_HOST", '"http://h5.xiaokakj.cn/"'
            buildConfigField "String", "MQTT_HOST", '"tcp://39.97.117.29:1883"'
            buildConfigField "String", "MQTT_USER_NAME", '"xiaoka"'
            buildConfigField "String", "MQTT_PSW", '"&mv7dHapB5J!95BJ"'
            buildConfigField "String", "IMG_SERVER", '"https://assets.xiaokakj.com/"'
        }
        //局域网环境
        local {
            dimension "App"//同在App这个名字维度
            buildConfigField "String", "HOST", '"http://10.10.2.23:10001/"'
            buildConfigField "String", "H5_HOST", '"http://h5.xiaokakj.cn/"'
            buildConfigField "String", "MQTT_HOST", '"tcp://10.10.4.6:1883"'
            buildConfigField "String", "MQTT_USER_NAME", '"admin"'
            buildConfigField "String", "MQTT_PSW", '"public"'
            buildConfigField "String", "IMG_SERVER", '"https://assets.xiaokakj.com/"'
        }
        //生产环境
        product {
            dimension "App"//同在App这个名字维度
            buildConfigField "String", "HOST", '"http://api.xiaokakj.com/"'
            buildConfigField "String", "H5_HOST", '"https://h5.xiaokakj.com/"'
            buildConfigField "String", "MQTT_HOST", '"tcp://ws.xiaokayun.cn"'
            buildConfigField "String", "MQTT_USER_NAME", '"xiaoka"'
            buildConfigField "String", "MQTT_PSW", '"&mv7dHapB5J!95BJ"'
            buildConfigField "String", "IMG_SERVER", '"https://assets.xiaokakj.com/"'
        }

        //dev环境
        dev {
            dimension "App"//同在App这个名字维度
            buildConfigField "String", "HOST", '"http://10.10.4.3:10001/"'
            buildConfigField "String", "H5_HOST", '"http://10.10.4.3/h5/"'
            buildConfigField "String", "MQTT_HOST", '"tcp://10.10.4.5:1883"'
            buildConfigField "String", "MQTT_USER_NAME", '"admin"'
            buildConfigField "String", "MQTT_PSW", '"public"'
            buildConfigField "String", "IMG_SERVER", '"https://assets.xiaokakj.com/"'
        }

        //test环境
        xtest {
            dimension "App"//同在App这个名字维度
            buildConfigField "String", "HOST", '"http://10.10.4.16:10001/"'
            buildConfigField "String", "H5_HOST", '"http://10.10.4.16"'
            buildConfigField "String", "MQTT_HOST", '"tcp://10.10.4.6:1883"'
            buildConfigField "String", "MQTT_USER_NAME", '"admin"'
            buildConfigField "String", "MQTT_PSW", '"public"'
            buildConfigField "String", "IMG_SERVER", '"https://assets.xiaokakj.com/"'
        }
    }
}

static def releaseTime() {
    return new Date().format("HHmm")
}

static def releaseDate() {
    return new Date().format("yyyyMMdd")
}

task handleMd5 {
    String md5Str = project.android.defaultConfig.manifestPlaceholders.get("XK_MD5")
    println "原始md5：" + md5Str
    md5Str = md5Str.trim().replace(":", "")
    project.android.defaultConfig.manifestPlaceholders.put("XK_MD5", md5Str.reverse())
    println "修改后md5：" + project.android.defaultConfig.manifestPlaceholders.get("XK_MD5")
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.appcompat
    implementation rootProject.ext.design
    implementation project(path: ':personal')
    implementation project(path: ':zhuanche')
    implementation project(path: ':daemon')
    implementation project(path: ':component')
    implementation project(path: ':common')
    implementation project(path: ':taxi')
    implementation project(path: ':cityline')
    implementation project(path: ':securitycenter')
    implementation project(path: ':passengerbus')
    implementation project(path: ':chartered')
    implementation project(path: ':rental')
    implementation project(path: ':custombus')
    implementation project(path: ':carpooling')
    implementation project(path: ':official')
}
