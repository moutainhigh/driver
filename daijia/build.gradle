apply plugin: 'com.android.library'

def cfg = rootProject.ext.android
def libs = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion

    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //解决在module中 buildconfig.debug总为false
        //调试时如果该值为false,没有调用 ARouter.openDebug();
        //不能正常跳转
        defaultPublishConfig "debug"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api libs['appcompat-v7']
    api libs['junit']
    api libs['multidex']
    api libs['design']
    api libs['pull-load-more-recycler']
    api libs['expandable-layout']

    api libs['amap-search']
    api libs['amap-navi']
    api libs['amap-loc']
    api libs['tag-view']

    api 'co.lujun:androidtagview:1.1.4'

    annotationProcessor 'com.alibaba:arouter-compiler:1.1.3'

    compile project(path: ':common')
}
